실습 예제 : 사원 관리 시스템
목표
ArrayList와 HashSet을 이용하여 사원 관리 시스템을 구현합니다. 이 시스템은 사원의 정보를 추가, 삭제, 검색할 수 있어야 하며, 중복된 사원 정보는 추가되지 않도록 처리합니다.
과제
Employee 클래스를 생성합니다. 사원은 이름(name), 아이디(id), 부서(department)를 속성으로 갖습니다.
HashSet을 사용하여 사원 정보를 관리하는 EmployeeManager 클래스를 구현합니다. addEmployee, removeEmployee, findEmployee 메소드를 구현합니다.
Employee의 equals와 hashCode 메소드를 오버라이드하여 아이디가 같은 사원은 중복으로 간주되지 않도록 합니다.

package day11.exam;

import java.util.Objects;

public class Employee {
    String id;
    String name;
    String department;

    public Employee(String name,String id, String department) {
        this.id = id;
        this.name = name;
        this.department = department;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDepartment() {
        return department;
    }

    public void setDepartment(String department) {
        this.department = department;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        Employee employee = (Employee) o;
        return Objects.equals(getId(), employee.getId()) && Objects.equals(getName(), employee.getName()) && Objects.equals(getDepartment(), employee.getDepartment());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getId(), getName(), getDepartment());
    }

    @Override
    public String toString() {
        return "Employee{" +
                "id='" + id + '\'' +
                ", name='" + name + '\'' +
                ", department='" + department + '\'' +
                '}';
    }
}

package day11.exam;

import java.util.HashSet;
import java.util.Set;

public class EmployeeManager {
    private Set<Employee> employeeSet = new HashSet<>();
    public void addEmployee(Employee employee){
        employeeSet.add(employee);
    }

    public void removeEmployee(Employee employee){
        employeeSet.remove(employee);
    }

    public void findEmployee(String id){
        for (Employee employee : employeeSet) {
            if(employee != null && employee.getId().equals(id)){
                System.out.println(employee.toString());
            }
        }
    }

}

package day11.exam;

public class Main {
    public static void main(String[] args) {
        EmployeeManager manager = new EmployeeManager();
        manager.addEmployee(new Employee("홍길동", "E01", "HR"));
        manager.addEmployee(new Employee("김철수", "E02", "Marketing"));
        manager.addEmployee(new Employee("홍길동", "E01", "HR")); // 중복 추가 시도

        manager.findEmployee("E01");
        manager.removeEmployee(new Employee("홍길동", "E01", "HR"));
        manager.findEmployee("E01");
    }
}
