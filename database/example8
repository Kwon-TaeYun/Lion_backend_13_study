//hr 데이터베이스의 emp 테이블에서 jdbc를 이용하여 insert,delete,update,select(하나, 다수)의 코드를 EmpDTO, EmpDAO를 작성하시오.
package org.example.jdbc.emp;

import java.sql.*;

public class DBUtil {
    //접속
    public static Connection getConnection() throws SQLException {
        String url = "jdbc:mysql://localhost:3307/scott";
        String user = "like";
        String password = "lion";

        Connection con = DriverManager.getConnection(url, user, password);
        return con;
    }

    public static Connection getConnection(String url, String user, String password) throws SQLException {
        Connection con = DriverManager.getConnection(url, user, password);
        return con;
    }
    public static void close(PreparedStatement ps){
        if(ps != null){
            try {
                ps.close();
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
    }

    public static void close(Connection conn){
        if(conn != null){
            try {
                conn.close();
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
    }

    public static void close(ResultSet rs){
        if(rs != null){
            try {
                rs.close();
            } catch (SQLException e) {
                throw new RuntimeException(e);
            }
        }
    }

    public static void close(PreparedStatement ps, Connection conn){
        close(ps);
        close(conn);

    }

    //종료
    public static void close(PreparedStatement ps, Connection conn, ResultSet rs){
        close(rs);
        close(ps);
        close(conn);

    }
}

package org.example.jdbc.emp;
import java.sql.Date;
public class EmpDTO {
    private int empno;
    private String ename;
    private String job;
    private int mgr;
    private Date hiredate;
    private double sal;
    private double comm;
    private int deptno;

    public int getEmpno() {
        return empno;
    }

    public void setEmpno(int empno) {
        this.empno = empno;
    }

    public String getEname() {
        return ename;
    }

    public void setEname(String ename) {
        this.ename = ename;
    }

    public String getJob() {
        return job;
    }

    public void setJob(String job) {
        this.job = job;
    }

    public int getMgr() {
        return mgr;
    }

    public void setMgr(int mgr) {
        this.mgr = mgr;
    }


    public double getSal() {
        return sal;
    }

    public void setSal(double sal) {
        this.sal = sal;
    }

    public double getComm() {
        return comm;
    }

    public void setComm(double comm) {
        this.comm = comm;
    }

    public int getDeptno() {
        return deptno;
    }

    public void setDeptno(int deptno) {
        this.deptno = deptno;
    }

    public Date getHiredate() {
        return hiredate;
    }

    public void setHiredate(Date hiredate) {
        this.hiredate = hiredate;
    }

    @Override
    public String toString() {
        return "EmpDTO{" +
                "empno=" + empno +
                ", ename='" + ename + '\'' +
                ", job='" + job + '\'' +
                ", mgr=" + mgr +
                ", hiredate=" + hiredate +
                ", sal=" + sal +
                ", comm=" + comm +
                ", deptno=" + deptno +
                '}';
    }
}

package org.example.jdbc.emp;

import java.sql.*;
import java.util.ArrayList;
import java.util.List;

public class EmpDAO {
    Connection conn = null;
    PreparedStatement ps = null;
    ResultSet rs = null;

    int count = 0;

    //insert
    public int insert(EmpDTO empDTO){
        String sql = "insert into emp(empno,ename,job,mgr,hiredate,sal,comm,deptno) values (?,?,?,?,?,?,?,?)";
        try {
            conn = DBUtil.getConnection();
            conn.setAutoCommit(false);
            ps = conn.prepareStatement(sql);
            ps.setInt(1, empDTO.getEmpno());
            ps.setString(2, empDTO.getEname());
            ps.setString(3, empDTO.getJob());
            ps.setInt(4, empDTO.getMgr());
            ps.setDate(5, empDTO.getHiredate());
            ps.setDouble(6, empDTO.getSal());
            ps.setDouble(7,empDTO.getComm());
            ps.setInt(8,empDTO.getDeptno());
            count = ps.executeUpdate();
            conn.commit();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            DBUtil.close(ps,conn,rs);
        }

        return count;

    }
    //update
    public int update(EmpDTO empDTO){
        int count = 0;
        String sql = "update emp set sal = ? where empno = ?";
        try {
            conn = DBUtil.getConnection();
            conn.setAutoCommit(false);
            ps = conn.prepareStatement(sql);
            ps.setDouble(1,empDTO.getSal());
            ps.setInt(2,empDTO.getDeptno());
            count = ps.executeUpdate();
            conn.commit();
        } catch (SQLException e) {
            e.printStackTrace();
        } finally {
            DBUtil.close(ps,conn,rs);
        }

        return count;
    }

    //delete
    public int delete(int empno){
        int count = 0;
        String sql = "delete from emp where empno = ?";
        try {
            conn = DBUtil.getConnection();
            conn.setAutoCommit(false);
            ps = conn.prepareStatement(sql);
            ps.setInt(1, empno);
            count = ps.executeUpdate();
            conn.commit();
        } catch (SQLException e) {
            e.printStackTrace();
        }finally {
            DBUtil.close(ps,conn,rs);
        }

        return count;
    }

    //select one
    public EmpDTO getOne(int empno){
        EmpDTO empDTO = new EmpDTO();
        int count = 0;
        String sql = "select * from emp where empno = ?;";
        try {
            Connection conn = DBUtil.getConnection();
            conn.setAutoCommit(false);
            ps = conn.prepareStatement(sql);
            ps.setInt(1, empno);
            rs = ps.executeQuery();
            if(rs.next()){
                empDTO.setEmpno(rs.getInt(1));
                empDTO.setEname(rs.getString(2));
                empDTO.setJob(rs.getString(3));
                empDTO.setMgr(rs.getInt(4));
                empDTO.setHiredate(rs.getDate(5));
                empDTO.setSal(rs.getDouble(6));
                empDTO.setComm(rs.getDouble(7));
                empDTO.setDeptno(rs.getInt(8));
            }
        } catch (SQLException e) {
            e.printStackTrace();

        } finally {
            DBUtil.close(ps,conn,rs);
        }

        return empDTO;
    }

    //select many
    public List<EmpDTO> select(int limit){
        List<EmpDTO> lists = new ArrayList<>();
        int count = 0;
        String sql = "select * from emp where empno >= ?;";
        try {
            Connection conn = DBUtil.getConnection();
            conn.setAutoCommit(false);
            ps = conn.prepareStatement(sql);
            ps.setInt(1, limit);
            rs = ps.executeQuery();
           while(rs.next()){
                EmpDTO empDTO = new EmpDTO();
                empDTO.setEmpno(rs.getInt(1));
                empDTO.setEname(rs.getString(2));
                empDTO.setJob(rs.getString(3));
                empDTO.setMgr(rs.getInt(4));
                empDTO.setHiredate(rs.getDate(5));
                empDTO.setSal(rs.getDouble(6));
                empDTO.setComm(rs.getDouble(7));
                empDTO.setDeptno(rs.getInt(8));

                lists.add(empDTO);
            }
        } catch (SQLException e) {
            e.printStackTrace();

        } finally {
            DBUtil.close(ps,conn,rs);
        }

        return lists;
    }

}

package org.example.jdbc.emp;

import java.sql.Date;
import java.time.LocalDate;
import java.util.List;

public class EmpDAOUser {
    public static void main(String[] args) {
          EmpDAO empDAO = new EmpDAO();
          EmpDTO empDTO = new EmpDTO();
//        empDTO.setEmpno(8000);
//        empDTO.setEname("TAEYUN");
//        empDTO.setJob("BACKEND");
//        empDTO.setMgr(7935);
//        empDTO.setHiredate(Date.valueOf(LocalDate.now()));
//        empDTO.setSal(9000.00);
//        empDTO.setComm(10.00);
//        empDTO.setDeptno(10);
//
//        int result = empDAO.insert(empDTO);
//        if(result == 1){
//            System.out.println("insert 성공!");
//        } else{
//            System.out.println("insert 실패!");
//        }

//        empDTO.setSal(10000.00);
//        empDTO.setDeptno(8000);
//        int result = empDAO.update(empDTO);
//        if(result == 1){
//            System.out.println("insert 성공!");
//        } else{
//            System.out.println("insert 실패!");
//        }
//
//        int result = empDAO.delete(7935);
//        if(result == 1){
//            System.out.println("delete 성공!");
//        } else{
//            System.out.println("delete 실패!");
//        }

//        EmpDTO list = empDAO.getOne(7900);
//        System.out.println(list.toString());

        List<EmpDTO> lists = empDAO.select(7900);
        for (EmpDTO list : lists) {
            System.out.println(list.toString());

        }






    }


}
