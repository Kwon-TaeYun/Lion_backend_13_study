실습 문제: 전화번호부 관리 프로그램
목표
사용자로부터 여러 명의 이름과 전화번호를 입력받아, 이를 파일에 저장하고 저장된 파일의 내용을 읽어 콘솔에 출력하는 프로그램을 작성합니다.

요구사항
사용자 입력 받기: 사용자로부터 총 3명의 이름과 전화번호를 입력받습니다.
파일에 저장: 입력받은 이름과 전화번호를 "c:\temp\phone.txt" 파일에 저장합니다. 각 라인에는 한 명의 이름과 전화번호가 공백으로 구분되어 저장되어야 합니다.
파일 읽기: 저장된 파일을 다시 읽어 그 내용을 콘솔에 출력합니다.
예외 처리: 파일 입출력 과정에서 발생할 수 있는 예외를 적절히 처리합니다.
상세 구현
PrintWriter와 FileOutputStream을 사용하여 파일에 데이터를 쓸 수 있습니다.
BufferedReader와 InputStreamReader를 사용하여 사용자로부터 데이터를 입력받을 수 있습니다.
BufferedReader와 FileReader를 사용하여 파일의 데이터를 읽을 수 있습니다.
입력받는 데이터의 수가 3개로 한정되어 있으며, 파일 작업이 완료된 후에는 사용자에게 파일에 데이터가 저장되었다는 메시지와 함께 파일의 내용을 출력하는 메시지를 표시해야 합니다.
파일이 존재하지 않을 때의 예외 처리와 입출력 과정에서의 예외를 처리해야 합니다.

package day12.exam;

import java.io.*;
import java.util.ArrayList;
import java.util.List;

public class PhoneMain {
    public static void main(String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        List<Phone> phoneList = new ArrayList<>();
        String fileName = "phone.txt";
        int count = 3;
        for (int i = 0; i < count; i++) {
            System.out.print("이름: ");
            String name = br.readLine();
            System.out.print("전화번호: ");
            String phoneNumber = br.readLine();
            phoneList.add(new Phone(name, phoneNumber));
        }

       try (
               PrintWriter pw = new PrintWriter(new FileOutputStream("phone.txt"))
               )
           {
               for (Phone phone : phoneList) {
                   pw.println(phone.toString());
               }
               System.out.println("... 전화번호가 " + fileName + "에 저장되었습니다.");

       } catch (Exception e){
           e.printStackTrace();
       }

        System.out.println(fileName + "의 내용은 다음과 같습니다...");
       BufferedReader br3 = new BufferedReader(new FileReader(fileName));
        for (int i = 0; i < 3; i++) {
            String str = br3.readLine();
            System.out.println(str);//콘솔로 출력
        }





    }
}
